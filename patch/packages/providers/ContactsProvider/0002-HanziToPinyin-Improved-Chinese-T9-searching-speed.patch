From cc4d113c4c14c6c55c975935431727679dcac90e Mon Sep 17 00:00:00 2001
From: XiNGRZ <chenxingyu92@gmail.com>
Date: Mon, 13 Mar 2017 22:48:19 +0800
Subject: [PATCH 2/2] HanziToPinyin: Improved Chinese T9 searching speed

with a more straightforward way to handle polyphones.

Change-Id: I0ad852d199a619f3c4d0bc3488e832754423b1e9
---
 .../providers/contacts/HanziToPinyin.java     | 94 ++++++++++---------
 1 file changed, 49 insertions(+), 45 deletions(-)

diff --git a/src/com/android/providers/contacts/HanziToPinyin.java b/src/com/android/providers/contacts/HanziToPinyin.java
index e5a09022..3a0154f0 100644
--- a/src/com/android/providers/contacts/HanziToPinyin.java
+++ b/src/com/android/providers/contacts/HanziToPinyin.java
@@ -20,8 +20,8 @@ import android.icu.text.Transliterator;
 import android.text.TextUtils;
 import android.util.Log;
 
-import java.text.Collator;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.Locale;
 
 
@@ -38,31 +38,53 @@ public class HanziToPinyin {
     private Transliterator mPinyinTransliterator;
     private Transliterator mAsciiTransliterator;
 
-    private static final Collator COLLATOR = Collator.getInstance(Locale.CHINA);
-    private static final String[] MULTINAMES = {
-        "\u590f","\u77bf","\u66fe","\u77f3","\u89e3","\u85cf","\u7fdf","\u90fd",
-        "\u516d","\u8584","\u8d3e","\u5c45","\u67e5","\u76db","\u5854","\u548c",
-        "\u84dd","\u6bb7","\u4e7e","\u9646","\u4e5c","\u961a","\u53f6","\u5f3a",
-        "\u6c64","\u4e07","\u6c88","\u4ec7","\u5357","\u5355","\u535c","\u9e1f",
-        "\u601d","\u5bfb","\u65bc","\u4f59","\u6d45","\u6d63","\u65e0","\u4fe1",
-        "\u8a31","\u9f50","\u4fde","\u82e5", };
-
-    private static final byte[][] MULTIPYS = {
-        { 88, 73, 65, 0, 0, 0 }, { 81, 85, 0, 0, 0, 0 }, { 90, 69, 78, 71, 0, 0 },
-        { 83, 72, 73, 0, 0, 0 }, { 88, 73, 69, 0, 0, 0 }, { 90, 65, 78, 71, 0, 0 },
-        { 90, 72, 65, 73, 0, 0 }, { 68, 85, 0, 0, 0, 0 }, { 76, 85, 0, 0, 0, 0 },
-        { 66, 79, 0, 0, 0, 0 }, { 74, 73, 65, 0, 0, 0 }, { 74, 85, 0, 0, 0, 0 },
-        { 90, 72, 65, 0, 0, 0 }, { 83, 72, 69, 78, 71, 0 }, { 84, 65, 0, 0, 0, 0 },
-        { 72, 69, 0, 0, 0, 0 }, { 76, 65, 78, 0, 0, 0 }, { 89, 73, 78, 0, 0, 0 },
-        { 81, 73, 65, 78, 0, 0 }, { 76, 85, 0, 0, 0, 0 }, { 78, 73, 69, 0, 0, 0 },
-        { 75, 65, 78, 0, 0, 0 }, { 89, 69, 0, 0, 0, 0 }, { 81, 73, 65, 78, 71, 0 },
-        { 84, 65, 78, 71, 0, 0 }, { 87, 65, 78, 0, 0, 0 }, { 83, 72, 69, 78, 0, 0 },
-        { 81, 73, 85, 0, 0, 0 }, { 78, 65, 78, 0, 0, 0 }, { 83, 72, 65, 78, 0, 0 },
-        { 66, 85, 0, 0, 0, 0 }, { 78, 73, 65, 79, 0, 0 }, { 83, 73, 0, 0, 0, 0 },
-        { 88, 85, 78, 0, 0, 0 }, { 89, 85, 0, 0, 0, 0 }, { 89, 85, 0, 0, 0, 0 },
-        { 81, 73, 65, 78, 0, 0 }, { 87, 65, 78, 0, 0, 0 }, { 87, 85, 0, 0, 0, 0 },
-        { 88, 73, 78, 0, 0, 0 }, { 88, 85, 0, 0, 0, 0 }, { 81, 73, 0, 0, 0, 0 },
-        { 89, 85, 0, 0, 0, 0 }, { 82, 85, 79, 0, 0, 0 }, };
+    private static final HashMap<String, String> POLYPHONES = new HashMap<>();
+    static {
+        POLYPHONES.put("夏", "XIA");
+        POLYPHONES.put("瞿", "QU");
+        POLYPHONES.put("曾", "ZENG");
+        POLYPHONES.put("石", "SHI");
+        POLYPHONES.put("解", "XIE");
+        POLYPHONES.put("藏", "ZANG");
+        POLYPHONES.put("翟", "ZHAI");
+        POLYPHONES.put("都", "DU");
+        POLYPHONES.put("六", "LU");
+        POLYPHONES.put("薄", "BO");
+        POLYPHONES.put("贾", "JIA");
+        POLYPHONES.put("居", "JU");
+        POLYPHONES.put("查", "ZHA");
+        POLYPHONES.put("盛", "SHENG");
+        POLYPHONES.put("塔", "TA");
+        POLYPHONES.put("和", "HE");
+        POLYPHONES.put("蓝", "LAN");
+        POLYPHONES.put("殷", "YIN");
+        POLYPHONES.put("乾", "QIAN");
+        POLYPHONES.put("陆", "LU");
+        POLYPHONES.put("乜", "NIE");
+        POLYPHONES.put("阚", "KAN");
+        POLYPHONES.put("叶", "YE");
+        POLYPHONES.put("强", "QIANG");
+        POLYPHONES.put("汤", "TANG");
+        POLYPHONES.put("万", "WAN");
+        POLYPHONES.put("沈", "SHEN");
+        POLYPHONES.put("仇", "QIU");
+        POLYPHONES.put("南", "NAN");
+        POLYPHONES.put("单", "SHAN");
+        POLYPHONES.put("卜", "BU");
+        POLYPHONES.put("鸟", "NIAO");
+        POLYPHONES.put("思", "SI");
+        POLYPHONES.put("寻", "XUN");
+        POLYPHONES.put("於", "YU");
+        POLYPHONES.put("余", "YU");
+        POLYPHONES.put("浅", "QIAN");
+        POLYPHONES.put("浣", "WAN");
+        POLYPHONES.put("无", "WU");
+        POLYPHONES.put("信", "XIN");
+        POLYPHONES.put("許", "XU");
+        POLYPHONES.put("齐", "QI");
+        POLYPHONES.put("俞", "YU");
+        POLYPHONES.put("若", "RUO");
+    }
 
     public static class Token {
         /**
@@ -128,25 +150,7 @@ public class HanziToPinyin {
      * @return right pinyin for this first name
      */
     private static String getMPinyin(final String firstName) {
-        int offset, cmp;
-        cmp = -1;
-
-        for (offset = 0; offset < MULTINAMES.length; offset++) {
-            cmp = COLLATOR.compare(firstName, MULTINAMES[offset]);
-            if (cmp == 0) {
-                break;
-            }
-        }
-
-        if (cmp != 0) {
-            return null;
-        } else {
-            StringBuilder pinyin = new StringBuilder();
-            for (int j = 0; j < MULTIPYS[offset].length && MULTIPYS[offset][j] != 0; j++) {
-                pinyin.append((char) MULTIPYS[offset][j]);
-            }
-            return pinyin.toString();
-        }
+        return POLYPHONES.get(firstName);
     }
 
     private void tokenize(char character, Token token, boolean isFirstName) {
-- 
2.20.1

